package kodlama.io.rentACar.business.concretes;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kodlama.io.rentACar.business.abstracts.BrandServices;
import kodlama.io.rentACar.business.requests.CreateBrandRequest;
import kodlama.io.rentACar.business.responses.GetAllBrandsResponse;
import kodlama.io.rentACar.core.utilities.mappers.ModelMapperService;
import kodlama.io.rentACar.dataAccess.abstracts.BrandRepository;
import kodlama.io.rentACar.entities.consretes.Brand;

@Service // bu sınıf bir business nesnesidir
public class BrandManager implements BrandServices {
	private BrandRepository brandRepository;
	private ModelMapperService modelMapperService;

	@Autowired
	public BrandManager(BrandRepository brandRepository) {

		this.brandRepository = brandRepository;
	}

	@Override
	public List<GetAllBrandsResponse> getAll() {
		// bir kişinin markaları listeleyebilmesi için iş kuralları
		List<Brand> brands = brandRepository.findAll(); // VERİ TABANINDAN BRANDLAR GELDİ
	//	List<GetAllBrandsResponse> brandResponse = new ArrayList<>();

		for (Brand brand : brands) {
			GetAllBrandsResponse responseItem = new GetAllBrandsResponse();
			responseItem.setId(brand.getId());
			responseItem.setName(brand.getName());

			brandResponse.add(responseItem);
		}

		List<GetAllBrandsResponse> brandResponse = brands.stream()
				.map(brand -> this.modelMapperService.forResponse().map(brandResponse, GetAllBrandsResponse.class))
				.collect(Collectors.toList());

		return brandResponse;
	}

	@Override
	public void add(CreateBrandRequest createBrandRequest) {

//		Brand brand = new Brand();
//		brand.setName(createBrandRequest.getName());
//		

		Brand brand = this.modelMapperService.forRequest().map(createBrandRequest, Brand.class);
		this.brandRepository.save(brand);

	}

}
